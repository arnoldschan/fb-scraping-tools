#!/usr/bin/env python3

from core import common
from core.facebook_fetcher import create_production_fetcher

import argparse
import logging
import sys

import requests_cache


def fetch_timeline_likes(fb_fetcher, user_id):
    """ Return an OrderedDict mapping user ids to a list of articles.

    e.g. OrderedDict([('username1', [article1, article2, ...]), ])
    """

    articles_found = fb_fetcher.fetch_articles_from_timeline(user_id)

    # Return an OrderedDict([('username1', {articleid1, articleid2, ...}), ])
    # Cannot be printed using JSON, convert the set to a list.
    articles_liked_per_user = \
        fb_fetcher.fetch_articles_liked_per_user(articles_found.keys())

    timeline_likes = \
        {username:list(articles_liked_per_user[username]) \
            for username in articles_liked_per_user}

    return timeline_likes


if __name__ == "__main__":

    common.configure_logging(logging.INFO)

    parser = argparse.ArgumentParser()
    parser.add_argument('-u', dest='username', action='store',
        help="Facebook username, e.g. zuck for Mark Zuckerberg")
    args = parser.parse_args()

    if not args.username:
        parser.print_help()
        sys.exit(1)

    # Enable caching (2 hrs) to avoid hitting Facebook too much
    requests_cache.install_cache(expire_after=7200)

    fb_fetcher = create_production_fetcher()

    timeline_likes = fetch_timeline_likes(fb_fetcher, args.username)

    print(common.prettify(timeline_likes))
