#! /bin/bash

set -u
set -e

usage() {
    [[ -z ${1:-} ]] || echo -e "Error: ${1}\n"
    echo -e "Usage:" >&2
    echo -e "${0} -f INPUT_FILE -l [-c]" >&2
    echo -e "${0} -f INPUT_FILE -t [-c]" >&2
    echo -e "${0} -f INPUT_FILE -p [-c]\n" >&2
    echo -e "\t-f\tInput file to denormalize or - for standard input"
    echo -e "\t-l\tInput file contains likes"
    echo -e "\t-p\tInput file contains posts"
    echo -e "\t-t\tInput file contains times"
    echo -e "\t-c\tCompact output"
    exit 1
}

input_file=""
compact_flag=""
denormalizing_pass=".[]"
extra=""
mutual_friends_filter='mutual_friends:((.mutual_friends//{})|to_entries|map(.value.name)|sort|join(","))'
while getopts "f:clpt" option_name; do
    case $option_name in
        f) input_file="${OPTARG:-}";;
        c) compact_flag="-c";;
        l) denormalizing_pass='.[]|{id,name,education,gender,relationship,work,year_of_birth,mutual_friends,like:.likes[]?}';
           extra="post_id:.like.post_id,content:.like.content,time:.like.date,like_count:.like.like_count,comment_count:.like.comment_count,link:.like.story_link,${mutual_friends_filter}";
        ;;
        p) denormalizing_pass='.[]|{id,name,education,gender,relationship,work,year_of_birth,mutual_friends,post:.posts[]?}';
           extra="post_id:.post.post_id,content:.post.content,time:.post.date,like_count:.post.like_count,comment_count:.post.comment_count,link:.post.story_link,${mutual_friends_filter}";;
        t) extra="time:.times[]?";;
        *) usage;;
    esac
done

[[ -n "${input_file}" ]] || usage "Input file not provided."
[[ -n "${extra}" ]] || usage "Please specify -l, -p or -t."

cat "${input_file}" | jq ${compact_flag} '['${denormalizing_pass}' |
    {
      id: (.id // empty),
      name: (.name // ""),
      education: (.education // ""),
      gender: (.gender // ""),
      relationship: (.relationship // ""),
      work: (.work // ""),
      year_of_birth: (.year_of_birth // ""),
      '${extra}'
    }]'
