#! /bin/bash

set -u
set -e

where_am_i="${0%/*}"

usage() {
    [[ -z ${1:-} ]] || echo -e "Error: ${1}\n"
    echo -e "Usage: ${0} -f INPUT_FILE [-l]\n" >&2
    echo -e "\t-f\tInput file containing a list of user ids / usernames or - for standard input"
    echo -e "\t-l\tFetch the name of people from friend list (faster for long list of friends)"
    exit 1
}

input_file=""
use_friend_list=0
while getopts "f:l" option_name; do
    case $option_name in
        f) input_file="${OPTARG:-}";;
        l) use_friend_list=1;;
        *) usage;;
    esac
done

[[ -n "${input_file}" ]] || usage "Input file not provided."

input_file_dup=$(mktemp)
user_infos_file=$(mktemp)

# Make it possible to deal with standard input
cat "${input_file}" > "${input_file_dup}"

# Fetch user infos
if [[ $use_friend_list -eq 1 ]]; then
    ${where_am_i}/../fetch-friend-list > "${user_infos_file}"
else
    cat "${input_file_dup}" | ${where_am_i}/../fetch-user-infos -i > "${user_infos_file}"
fi

# Combine the two JSON files
jq -s '.[0] * .[1]' "${user_infos_file}" "${input_file_dup}"

rm "${input_file_dup}"
rm "${user_infos_file}"
